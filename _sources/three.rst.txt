Справка по языку Python
=======================

Данное справочное руководство описывает синтаксис и "основную семантику" языка. Оно краткое, но с претензией быть точным и полным. Семантика второстепенных встроенных объектных типов, а также встроенных функций и модулей описывается в Стандартной библиотеке Python. Для неформального введения в язык см. Учебник Python. Для программистов C или C++ существуют два дополнительных руководства: Расширение и встраивание интерпретатора Python (docs.python.org/3/extending/index.html) описывает высокоуровневую картину, как написать модуль расширения Python, а Справочное руководство по API Python/C (https://docs.python.org/3/c-api/index.html) описывает в деталях интерфейсы, доступные программистам C/C++.

Введение
--------

Это справочное руководство описывает язык программирования Python. Его предназначение отличается от учебника.

Хотя я стараюсь быть максимально точным, я решил использовать английский, а не формальные спецификации для всего, кроме синтаксиса и лексического анализа. Это должно сделать документ более понятным для обычных читателей, но оставит место для неоднозначности. Следовательно, если вы прибыли с Марса и пытались повторно реализовать Python только по этому документу, вам вероятно придется угадывать вещи, и в действительности вы возможно закончите реализацию совсем другим языком. С другой стороны, если вы используете Python и интересуетесь точными правилами в какой-то конкретной области языка, вам определенно следует искать их здесь. Если вам хочется увидеть больше формальных определений языка, может быть вы могли бы побыть волонтером в ваше время или изобрести машину для клонирования :-).

Опасно добавлять слишком много деталей реализации в документ справки по языку - реализация может измениться, и другие реализации этого же языка могут работать по-другому. С другой стороны, CPython является единственной реализацией в широком использовании (хотя альтернативные реализации продолжают получать поддержку), и его конкретные особенности иногда стоит упомянуть, особенно там, где реализация налагает дополнительные ограничения. Поэтому вы обнаружите короткие "заметки реализации", разбросанные среди текста.

Каждая реализация Python приходит с рядом встроенных и стандартных модулей. Они документированы в Стандартной библиотеке Python. Несколько встроенных модулей упомянуты, когда они взаимодействуют в значительной степени с языковыми определениями.

Лексический анализ
------------------

Программа на Python читается синтаксическим анализатором (parser). В парсер вводится поток символов (tokens), генерируемых лексическим анализатором (lexical analyzer). В этой главе описывается, как лексический анализатор разбивает файл на токены.

Python читает текст программы как элементы кода Unicode; кодировка исходного файла может быть задана объявлением кодировки и по-умолчанию является UTF-8, детали см. PEP 3120 (www.python.org/dev/peps/pep-3120). Если файл исходного кода не может быть декодирован возникает ошибка SyntaxError (docs.python.org/3/library/exceptions.html#SyntaxError).

`Вернуться к началу <index.html>`_