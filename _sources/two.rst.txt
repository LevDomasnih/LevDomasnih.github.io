Справка по стандартной библиотеке Python
========================================

Хотя "Справочник по языку Python" описывает точный синтаксис и семантику языка Python, это справочное руководство описывает стандартную библиотеку, распространяемую с Python. Здесь также описываются некоторые дополнительные компоненты, которые обычно включены в дистрибутивы Python.

Стандартная библиотека языка Python очень обширна, предлагает большой набор средств, что можно увидеть из длинного оглавления ниже. Библиотека содержит встроенные модули (написанные на Си), которые обеспечивают доступ к функциям системы, таким как файловый ввод/вывод, и которые могли бы оказаться недоступными для Python-программистов, а также модули, написанные на Python, которые предоставляют стандартные решения для многих проблем, которые возникают при каждодневном программировании. Некоторые из этих модулей предназначены исключительно для поддержки и повышения переносимости программ на Python путем абстрагирования от специфики платформы в платформенно-нейтральный API.

Установщики Python для платформы Windows, как правило, включают в себя всю стандартную библиотеку и часто также включают множество дополнительных компонентов. Для Unix-подобных операционных систем Python обычно поставляется в виде набора пакетов, так что может оказаться необходимым использовать упаковочные инструменты, предоставляемые вместе с операционной системой, чтобы получить некоторые или все из дополнительных компонентов.

В дополнение к стандартной библиотеке, есть растущая коллекция из нескольких тысяч компонентов (от отдельных программ и модулей в пакетах до ​​целых фреймворков разработки приложений), доступных на Python Package Index (pypi.python.org/pypi).

Введение
--------

"Библиотека Python" включает несколько разных видов компонентов.

Она содержит типы данных, которые обычно считаются частью «ядра» языка, как, например, числа и списки. Для этих типов ядро ​​языка Python определяет форму литералов и накладывает некоторые ограничения на их семантику, но полностью не определяет ее. (С другой стороны ядро ​​языка определяет синтаксические свойства как в написании, так и в приоритете операторов.)

Библиотека также содержит встроенные функции и исключения - объекты, которые могут использоваться во всем коде Python без необходимости использования оператора import (docs.python.org/3/reference/simple_stmts.html#import). Некоторые из них определяются ядром языка, но многие не является необходимыми для семантики ядра и только описаны здесь.

Однако основная часть библиотеки состоит из набора модулей. Существует много способов проанализировать эту коллекцию. Некоторые модули написаны на языке C и встроены в интерпретатор Python; другие написаны на Python и импортированы в виде исходного кода. Некоторые модули обеспечивают интерфейсы, которые весьма специфичны для Python, например вывод трассировки стека; некоторые предоставляют интерфейсы, которые являются специфическими для конкретных операционных систем, такие как доступ к конкретному оборудованию; другие предоставляют интерфейсы, которые являются специфическими для конкретной области приложений, как, например, World Wide Web. Некоторые модули доступны во всех версиях и портах Python; другие доступны только тогда, когда лежащая в основе система поддерживает или требует их; другие доступны только тогда, когда был выбран конкретный параметр конфигурации при компиляции и установки Python.

Это руководство организовано "шиворот навыворот": оно сначала описывает встроенные типы данных, затем встроенные функции и исключения, и, наконец, модули, сгруппированные в главах связанных модулей.

Это означает, что если вы начнете читать данное руководство с самого начала и переходите к следующей главе, то когда вам надоест, вы уже получите приемлемый обзор доступных модулей и областей применения, которые поддерживаются библиотеками Python. Конечно, вы не обязаны читать руководство как роман - вы также можете просмотреть оглавление (в начале руководства), или искать конкретную функцию, модуль или термин в индексе (в конце). И, наконец, если вам нравится узнавать о случайных предметах, вы выбираете случайный номер страницы (см. модуль random (docs.python.org/3/library/random.html#module-random)) и читаете раздел или два. Независимо от того, как вы будете читать разделы данного руководства, начните с главы "Встроенные функции", так как остальная часть руководства предполагает знакомство с этим материалом.

Пусть шоу начинается!

`Вернуться к началу <index.html>`_